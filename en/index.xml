<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>helloEdwin</title>
        <link>https://lusenzhang.github.io/en/</link>
        <description>这是我的全新 Hugo 网站</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 28 Jan 2021 21:46:35 -0500</lastBuildDate>
            <atom:link href="https://lusenzhang.github.io/en/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Data Structure Class2</title>
    <link>https://lusenzhang.github.io/en/data-structure-class2/</link>
    <pubDate>Thu, 28 Jan 2021 21:46:35 -0500</pubDate>
    <author>Author</author>
    <guid>https://lusenzhang.github.io/en/data-structure-class2/</guid>
    <description><![CDATA[Class 2 Recursion I &amp; Binary Search Recursion key points:
  Seeming: function calls itself.
  In essence: Boil down a big problem to smaller ones (size n depends on size n -1, or n - 2 or &hellip;n/2)
  implement:
a. Base Case: smallest problem to solve
b. Recursive rule: how to make the problem smaller (if we can resolve the same problem but with a smaller size, then what is left to do for the current problem size n)]]></description>
</item><item>
    <title>Practice Class 2</title>
    <link>https://lusenzhang.github.io/en/practice-class2/</link>
    <pubDate>Thu, 21 Jan 2021 21:47:57 -0500</pubDate>
    <author>Author</author>
    <guid>https://lusenzhang.github.io/en/practice-class2/</guid>
    <description><![CDATA[Controlling your program and data Conditional and Loop   If&hellip;.[else]
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  public class MyHelloWord { public static void main(String[] args) { int x = 11; //one output  if (x &gt; 0) { System.out.println(&#34;x&gt;0&#34;); } else if (x &gt; 5) { System.out.println(&#34;x&gt;5&#34;); } else if (x &gt; 10) { System.out.println(&#34;x&gt;10&#34;); } else { System.out.println(&#34;others&#34;); } } }   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  public class MyHelloWord { public static void main(String[] args) { int x = 11; //all output  if (x &gt; 0) { System.]]></description>
</item><item>
    <title>Practice Class 1</title>
    <link>https://lusenzhang.github.io/en/practice-class1/</link>
    <pubDate>Wed, 13 Jan 2021 20:29:05 -0500</pubDate>
    <author>Author</author>
    <guid>https://lusenzhang.github.io/en/practice-class1/</guid>
    <description><![CDATA[Basic Types and Operations 1. Int, long int and long are both types for representing integers(positive or negative)
Mathematically, integer set is closed under + - * but not /. (/: 向零取整)
In Java, when there is decimals, down cast to the closed integer.
Assignments: =
2. Float/double float and double are Java representations of real numbers.
3. char and characters in your program Represents a CHARacter (English letter, or digits, or punctuation)]]></description>
</item><item>
    <title>Data Structure Class 1</title>
    <link>https://lusenzhang.github.io/en/data-structure-class1/</link>
    <pubDate>Mon, 11 Jan 2021 21:26:04 -0500</pubDate>
    <author>Author</author>
    <guid>https://lusenzhang.github.io/en/data-structure-class1/</guid>
    <description><![CDATA[Become a solid software engineer, need to achieve the following:
 Part1 Solid CS basic knowledge Part2 Solid Coding Skills Part3 industry project &ndash;&gt; Outstanding Resume Part4 interview soft power Part5 Referral + career development  Data Structure Data Structure is a particular way of organizing data in a computer so that it can be used efficiently.
Common data structure
 Array (physical concepts) Stack (logical concepts) Queue (logical concepts) Linked List (physical concepts) Tree Heap Graph Hash table  Big O notation: algorithm complexity(time complexity, space complexity)]]></description>
</item><item>
    <title>Basic concepts</title>
    <link>https://lusenzhang.github.io/en/basic_concepts/</link>
    <pubDate>Thu, 07 Jan 2021 10:53:20 -0500</pubDate>
    <author>Author</author>
    <guid>https://lusenzhang.github.io/en/basic_concepts/</guid>
    <description><![CDATA[All data structures are implemented by two methods: Array and LinkedList.]]></description>
</item></channel>
</rss>
